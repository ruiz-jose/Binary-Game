---
import Layout from 'src/layouts/Layout.astro';
---

<Layout title="IntraPage" background="#eef">
	<h1 style="display: inline-block; view-transition-name: heading1">Intra Page View Transitions</h1>
	<p>
		<b>The "Morph" transition only works with browsers that natively support view transition API.</b
		>
	</p>

	<p transition:animate="fade">
		<a href="/intra-page/only-page/?vt=0#down-under"
			>Hash change link with parameters to same page</a
		>
	</p>
	<p>
		Normally, navigation to a hash target on the current page won't trigger view transitions. The
		recipe for get intra-page view transitions is as follows:
		<ul>
			<li>
				add an search parameter, e.g. <code>?vt</code> to the intra-page URL, thus forcing view transitions
				and events.
			</li>
			<li>
				in an <code>astro:before-preparation</code> listener: redefine the <code>loader()</code> to do
				nothing
			</li>
			<li>
				in an <code>astro:before-swap</code> listener: redefine <code>swap()</code> to do nothing (besides
				removing old instances of <code>.astro-route-announcer</code>)
			</li>

			<li>
				then choose one of the following two alternatives also for the <code>astro-before-swap</code
				> listener:
				<ol>
					<li>remove the search parameter added before from <code>e.to.search</code></li>
					<li>
						give the search parameter added above a random value by assigning to <code
							>e.to.search</code
						>.
					</li>
				</ol>
			</li>
		</ul>
		The first alternative has the benefit, that the artificially introduced parameter does not show up
		in the browsers address bar. The second alternative has the benefit, that you also get intra-page
		view transitions when traversing back and forth through the browser history.
	</p>
	<p>
		A third approach would be to link to the same page without any hash fragment as in <a
			href="/ken-guru/">the kangaroo demo</a
		> and have some way to find out where to scroll to <a href="/intra-page/only-page/"
			>like this link</a
		>. Because the URL does not change, no entries will be added to the browser history. When you
		press back you will leave the page.
	</p>
	<div
		style="height:75vh; background: linear-gradient(0deg, rgba(34,193,195,1) 0%, rgba(253,187,45,1) 100%)"
	>
	</div>
	<h2 id="down-under" style="display: inline-block; view-transition-name: heading2">
		An heading further down the page
	</h2>
</Layout>
<script>
	import {
		isTransitionBeforePreparationEvent,
		isTransitionBeforeSwapEvent,
	} from 'astro:transitions/client';

	const enabled = (p: string) => p.endsWith('/intra-page/only-page/');
	let previousScrollY: number;

	document.addEventListener('astro:before-preparation', (e) => {
		if (
			isTransitionBeforePreparationEvent(e) &&
			enabled(e.from.pathname) &&
			enabled(e.to.pathname)
		) {
			e.loader = async () => {};
		}
	});
	document.addEventListener('astro:before-swap', (e) => {
		previousScrollY = 0;
		if (isTransitionBeforeSwapEvent(e) && enabled(e.from.pathname) && enabled(e.to.pathname)) {
			e.swap = () => {
				const style1 = document.querySelector('h1')!.style;
				const style2 = document.querySelector('h2')!.style;
				const h = style1.viewTransitionName;
				style1.viewTransitionName = style2.viewTransitionName;
				style2.viewTransitionName = h;
				e.newDocument.querySelector('.astro-route-announcer')?.remove();
			};
			if (e.to.search) {
				e.to.search = `vt=${Math.random().toString(36).slice(2, 6)}`;
			}
			previousScrollY = scrollY;
		}
	});
	document.addEventListener('astro:after-swap', () => {
		if (enabled(location.pathname)) {
			if (previousScrollY > 0) {
				window.scrollTo({ behavior: 'auto', top: 0 });
			} else {
				document
					.querySelector('#down-under')
					?.scrollIntoView({ behavior: 'auto', block: 'start', inline: 'nearest' });
			}
		}
	});
</script>
<style is:global>
	::view-transition-group(*) {
		animation-duration: 2s;
	}
</style>
