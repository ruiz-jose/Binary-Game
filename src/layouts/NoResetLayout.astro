---
import Layout from './Layout.astro';

interface Props {
	title: string;
}
const { title } = Astro.props;
---

<Layout title={title} background="black">
	<h1 style="background-color: darkslateblue; margin: 1ex; color:coral">
		See <a style="color:goldenrod" data-astro-reload href="/library/ReplacementSwap/"
			>ReplacementSwap</a
		> for a reusable component solving resets
	</h1>
	<slot />
</Layout>

<style is:global>
	body {
		background-color: dimgray;
		font-family: sans-serif;
	}
	code {
		background-color: orange;
		font-family: monospace;
		font-size: 1.15rem;
	}
	h1 {
		background-color: darkslategrey;
		color: wheat;
		padding: 1rem;
		margin: 0;
	}
	iframe {
		width: 50vw;
	}
	a {
		color: darkslategrey;
		text-decoration: underline;
		font-size: 2rem;
	}
	p {
		background-color: goldenrod;
		padding: 1rem;
		font-size: 1.2rem;
		margin: 0;
	}
	.sky {
		overflow: hidden; /* hides any part of the sun below the horizon */
		background-color: lightblue;
		display: inline-flex;
		justify-content: center;
	}

	.sun {
		background-color: orange;
		border-radius: 50%;
		height: 25vh;
		aspect-ratio: 1 / 1;
		margin: 10vh;
		animation: 4s cubic-bezier(0.075, 0.82, 0.165, 1) 0s infinite alternate flow;
	}

	@keyframes flow {
		from {
			transform: translateX(65vw);
		}
		to {
			transform: translateX(-65vw);
		}
	}
</style>
<script>
	import { TRANSITION_BEFORE_SWAP, isTransitionBeforeSwapEvent } from 'astro:transitions/client';

	document.addEventListener(TRANSITION_BEFORE_SWAP, (event: Event) => {
		if (isTransitionBeforeSwapEvent(event)) {
			const pathname = event.from.pathname;
			if (
				pathname.endsWith('/no-reset/two/') ||
				pathname.endsWith('/no-reset/three/') ||
				pathname.endsWith('/no-reset/four/')
			) {
				event.swap = () => {
					event.newDocument.querySelectorAll('[data-swap]').forEach((element: Element) => {
						const name = element instanceof HTMLElement && element.dataset.swap;
						document.querySelector(`[data-swap="${name}"]`)?.replaceWith(element);
					});
					document.querySelector("[class*='astro-route-announcer']")?.remove();
				};
			}
		}
	});
</script>
